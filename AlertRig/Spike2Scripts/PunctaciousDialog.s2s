#include "../../Spike2Util/UsreyUtil.s2s"

var punNChannels% := 1;
var punDotSize% := 4;
var punUseGrid% := 0;
var punGridCenterX% := 0;
var punGridCenterY% := 0;
var punUseGridDots%[4];
var punGridDotsXY%[4][2];
var punUsePoints%[4];
var punPointsXY%[4][2];
var punUseRamp% := 0;
var punTOn := 2;
var punTOff := 1;
var punFreq := .25;
var punFullField% := 0;

proc SavePunctaciousParameters()
	var key$;
	key$:=GetRegistryKey$(1) + "\\Scripts\\Punctacious";
    
    ' Main dialog
    SetIntRegistryValue(key$, "DotSize", punDotSize%);
    SetIntRegistryValue(key$, "UseRamp", punUseRamp%);
    SetFloatRegistryValue(key$, "Freq", punFreq);
    SetFloatRegistryValue(key$, "TOn", punTOn);
    SetFloatRegistryValue(key$, "TOff", punTOff);
    SetIntRegistryValue(key$, "FullField", punFullField%);
    
    ' grid dialog
    SetIntRegistryValue(key$, "UseGrid", punUseGrid%);
    SetIntRegistryValue(key$, "GridCenterX", punGridCenterX%);
    SetIntRegistryValue(key$, "GridCenterY", punGridCenterY%);
    SetIntRegistryValue(key$, "UseGridDots_0", punUseGridDots%[0]);
    SetIntRegistryValue(key$, "UseGridDots_1", punUseGridDots%[1]);
    SetIntRegistryValue(key$, "UseGridDots_2", punUseGridDots%[2]);
    SetIntRegistryValue(key$, "UseGridDots_3", punUseGridDots%[3]);
    SetIntRegistryValue(key$, "GridDotsXY_0_0", punGridDotsXY%[0][0]);
    SetIntRegistryValue(key$, "GridDotsXY_0_1", punGridDotsXY%[0][1]);
    SetIntRegistryValue(key$, "GridDotsXY_1_0", punGridDotsXY%[1][0]);
    SetIntRegistryValue(key$, "GridDotsXY_1_1", punGridDotsXY%[1][1]);
    SetIntRegistryValue(key$, "GridDotsXY_2_0", punGridDotsXY%[2][0]);
    SetIntRegistryValue(key$, "GridDotsXY_2_1", punGridDotsXY%[2][1]);
    SetIntRegistryValue(key$, "GridDotsXY_3_0", punGridDotsXY%[3][0]);
    SetIntRegistryValue(key$, "GridDotsXY_3_1", punGridDotsXY%[3][1]);
    
    ' points dialog
    SetIntRegistryValue(key$, "UsePoints_0", punUsePoints%[0]);
    SetIntRegistryValue(key$, "UsePoints_1", punUsePoints%[1]);
    SetIntRegistryValue(key$, "UsePoints_2", punUsePoints%[2]);
    SetIntRegistryValue(key$, "UsePoints_3", punUsePoints%[3]);
    SetIntRegistryValue(key$, "PointsXY_0_0", punPointsXY%[0][0]);
    SetIntRegistryValue(key$, "PointsXY_0_1", punPointsXY%[0][1]);
    SetIntRegistryValue(key$, "PointsXY_1_0", punPointsXY%[1][0]);
    SetIntRegistryValue(key$, "PointsXY_1_1", punPointsXY%[1][1]);
    SetIntRegistryValue(key$, "PointsXY_2_0", punPointsXY%[2][0]);
    SetIntRegistryValue(key$, "PointsXY_2_1", punPointsXY%[2][1]);
    SetIntRegistryValue(key$, "PointsXY_3_0", punPointsXY%[3][0]);
    SetIntRegistryValue(key$, "PointsXY_3_1", punPointsXY%[3][1]);
    return;
end

proc GetPunctaciousParameters()
	var key$;
	key$:=GetRegistryKey$(1) + "\\Scripts\\Punctacious";
    
    ' Main dialog
    punDotSize% := GetIntRegistryValue%(key$, "DotSize", punDotSize%);
    punUseRamp% := GetIntRegistryValue%(key$, "UseRamp", punUseRamp%);
    punFreq := GetFloatRegistryValue(key$, "Freq", punFreq);
    punTOn := GetFloatRegistryValue(key$, "TOn", punTOn);
    punTOff := GetFloatRegistryValue(key$, "TOff", punTOff);
    punFullField% := GetIntRegistryValue%(key$, "FullField", punFullField%);
    
    ' grid dialog
    punUseGrid% := GetIntRegistryValue%(key$, "UseGrid", punUseGrid%);
    punGridCenterX% := GetIntRegistryValue%(key$, "GridCenterX", punGridCenterX%);
    punGridCenterY% := GetIntRegistryValue%(key$, "GridCenterY", punGridCenterY%);
    punUseGridDots%[0] := GetIntRegistryValue%(key$, "UseGridDots_0", punUseGridDots%[0]);
    punUseGridDots%[1] := GetIntRegistryValue%(key$, "UseGridDots_1", punUseGridDots%[1]);
    punUseGridDots%[2] := GetIntRegistryValue%(key$, "UseGridDots_2", punUseGridDots%[2]);
    punUseGridDots%[3] := GetIntRegistryValue%(key$, "UseGridDots_3", punUseGridDots%[3]);
    punGridDotsXY%[0][0] := GetIntRegistryValue%(key$, "GridDotsXY_0_0", punGridDotsXY%[0][0]);
    punGridDotsXY%[0][1] := GetIntRegistryValue%(key$, "GridDotsXY_0_1", punGridDotsXY%[0][1]);
    punGridDotsXY%[1][0] := GetIntRegistryValue%(key$, "GridDotsXY_1_0", punGridDotsXY%[1][0]);
    punGridDotsXY%[1][1] := GetIntRegistryValue%(key$, "GridDotsXY_1_1", punGridDotsXY%[1][1]);
    punGridDotsXY%[2][0] := GetIntRegistryValue%(key$, "GridDotsXY_2_0", punGridDotsXY%[2][0]);
    punGridDotsXY%[2][1] := GetIntRegistryValue%(key$, "GridDotsXY_2_1", punGridDotsXY%[2][1]);
    punGridDotsXY%[3][0] := GetIntRegistryValue%(key$, "GridDotsXY_3_0", punGridDotsXY%[3][0]);
    punGridDotsXY%[3][1] := GetIntRegistryValue%(key$, "GridDotsXY_3_1", punGridDotsXY%[3][1]);
    
    ' points dialog
    punUsePoints%[0] := GetIntRegistryValue%(key$, "UsePoints_0", punUsePoints%[0]);
    punUsePoints%[1] := GetIntRegistryValue%(key$, "UsePoints_1", punUsePoints%[1]);
    punUsePoints%[2] := GetIntRegistryValue%(key$, "UsePoints_2", punUsePoints%[2]);
    punUsePoints%[3] := GetIntRegistryValue%(key$, "UsePoints_3", punUsePoints%[3]);
    punPointsXY%[0][0] := GetIntRegistryValue%(key$, "PointsXY_0_0", punPointsXY%[0][0]);
    punPointsXY%[0][1] := GetIntRegistryValue%(key$, "PointsXY_0_1", punPointsXY%[0][1]);
    punPointsXY%[1][0] := GetIntRegistryValue%(key$, "PointsXY_1_0", punPointsXY%[1][0]);
    punPointsXY%[1][1] := GetIntRegistryValue%(key$, "PointsXY_1_1", punPointsXY%[1][1]);
    punPointsXY%[2][0] := GetIntRegistryValue%(key$, "PointsXY_2_0", punPointsXY%[2][0]);
    punPointsXY%[2][1] := GetIntRegistryValue%(key$, "PointsXY_2_1", punPointsXY%[2][1]);
    punPointsXY%[3][0] := GetIntRegistryValue%(key$, "PointsXY_3_0", punPointsXY%[3][0]);
    punPointsXY%[3][1] := GetIntRegistryValue%(key$, "PointsXY_3_1", punPointsXY%[3][1]);

    return;
end



func PunctaciousDialog%()
    var status%;
    var tmp%,AdjustedY%;
    
    GetPunctaciousParameters();
    
    DlgCreate("Punctacious Parameters");
    DlgInteger(1, "Dot size: ", 4, 28, 0, 0, 4);
    DlgCheck(2, "Use contrast ramp");
    DlgReal(3, "Frequency (Hz):", 0.001, 100);
    DlgReal(4, "T On (sec):", 0.001, 100);
    DlgReal(5, "T Off (sec):", 0.001, 100);
    DlgCheck(6, "Full Field");
    DlgButton(101, "Grid", PunctaciousGridDialog%);
    DlgButton(102, "Points", PunctaciousPointsDialog%);
    DlgAllow(0xffff, 0, PunctaciousDialogChanged%);
'    DlgInteger(6, "Number of repeats: ", 1, 100);
    '    DlgList(7, "Color properties: ", amsColor$[]);
    status% := DlgShow(punDotSize%, punUseRamp%, punFreq, punTOn, punTOff, punFullField%);
    if status% = 1 then
        SavePunctaciousParameters();
    endif
    
    return status%
end

func PunctaciousDialogChanged%(item%)
    docase
    case item% = 0 then
        DlgEnable(1-punUseRamp%, 4, 5);
        DlgEnable(punUseRamp%, 3);
    case item% = 2 then
        DlgEnable(1-DlgValue(2), 4, 5);
        DlgEnable(DlgValue(2), 3);
    endcase
    return 1;
end


func PunctaciousGridDialogChanged%(item%)
    docase
    case item% = 0 then
        DlgEnable(punUseGrid%, 2, 3, 4, 5, 6, 7, 8, 9);
        DlgEnable(punUseGrid%, 10, 11, 12, 13, 14, 15);
        DlgEnable(punUseGridDots%[0], 5, 6);
        DlgEnable(punUseGridDots%[1], 8, 9);
        DlgEnable(punUseGridDots%[2], 11, 12);
        DlgEnable(punUseGridDots%[3], 14, 15);
    case item% = 1 then
        DlgEnable(DlgValue(1), 2, 3, 4, 7, 10, 13);
        DlgEnable(DlgValue(4), 5, 6);
        DlgEnable(DlgValue(7), 8, 9);        
        DlgEnable(DlgValue(10), 11, 12);        
        DlgEnable(DlgValue(13), 14, 15);        
    case item% = 4 then
        DlgEnable(DlgValue(4), 5, 6);
    case item% = 7 then
        DlgEnable(DlgValue(7), 8, 9);
    case item% = 10 then
        DlgEnable(DlgValue(10), 11, 12);
    case item% = 13 then
        DlgEnable(DlgValue(13), 14, 15);
    endcase
    return 1;
end


func PunctaciousGridDialog%()
    DlgCreate("Punctacious Grid");
    DlgCheck(1, "Use grid");
    DlgInteger(2, "Center X coord: ", -400, 400);
    DlgInteger(3, "Center Y coord: ", -300, 300);
    DlgCheck(4, "Dot 1", 5, 4);
    DlgInteger(5, "X:", 0, 15, 20, 4, 1);
    DlgInteger(6, "Y:", 0, 15, 35, 4, 1);
    DlgCheck(7, "Dot 2", 5, 5);
    DlgInteger(8, "X:", 0, 15, 20, 5, 1);
    DlgInteger(9, "Y:", 0, 15, 35, 5, 1);
    DlgCheck(10, "Dot 3", 5, 6);
    DlgInteger(11, "X:", 0, 15, 20, 6, 1);
    DlgInteger(12, "Y:", 0, 15, 35, 6, 1);
    DlgCheck(13, "Dot 4", 5, 7);
    DlgInteger(14, "X:", 0, 15, 20, 7, 1);
    DlgInteger(15, "Y:", 0, 15, 35, 7, 1);
    DlgAllow(0xffff, 0, PunctaciousGridDialogChanged%);
    DlgShow(punUseGrid%, punGridCenterX%, punGridCenterY%, 
        punUseGridDots%[0], punGridDotsXY%[0][0], punGridDotsXY%[0][1], 
        punUseGridDots%[1], punGridDotsXY%[1][0], punGridDotsXY%[1][1], 
        punUseGridDots%[2], punGridDotsXY%[2][0], punGridDotsXY%[2][1], 
        punUseGridDots%[3], punGridDotsXY%[3][0], punGridDotsXY%[3][1]); 
    return 1;
end

func PunctaciousPointsDialogChanged%(item%)
    docase
    case item% = 0 then
        DlgEnable(punUsePoints%[0], 2, 3);
        DlgEnable(punUsePoints%[1], 5, 6);
        DlgEnable(punUsePoints%[2], 8, 9);
        DlgEnable(punUsePoints%[3], 11, 12);
    case item% = 1 then
        DlgEnable(DlgValue(1), 2, 3);
    case item% = 4 then
        DlgEnable(DlgValue(4), 5, 6);
    case item% = 7 then
        DlgEnable(DlgValue(7), 8, 9);
    case item% = 10 then
        DlgEnable(DlgValue(10), 11, 12);
    endcase
    return 1;
end


func PunctaciousPointsDialog%()
    DlgCreate("Punctacious Points");
    DlgCheck(1, "Point 1", 5, 1);
    DlgInteger(2, "X:", -400, 400, 20, 1);
    DlgInteger(3, "Y:", -300, 300, 40, 1);
    DlgCheck(4, "Point` 2", 5, 2);
    DlgInteger(5, "X:", -400, 400, 20, 2);
    DlgInteger(6, "Y:", -300, 300, 40, 2);
    DlgCheck(7, "Point 3", 5, 3);
    DlgInteger(8, "X:", -400, 400, 20, 3);
    DlgInteger(9, "Y:", -300, 300, 40, 3);
    DlgCheck(10, "Point` 4", 5, 4);
    DlgInteger(11, "X:", -400, 400, 20, 4);
    DlgInteger(12, "Y:", -300, 300, 40, 4);
    DlgAllow(0xffff, 0, PunctaciousPointsDialogChanged%);
    DlgShow(punUsePoints%[0], punPointsXY%[0][0], punPointsXY%[0][1], 
        punUsePoints%[1], punPointsXY%[1][0], punPointsXY%[1][1], 
        punUsePoints%[2], punPointsXY%[2][0], punPointsXY%[2][1], 
        punUsePoints%[3], punPointsXY%[3][0], punPointsXY%[3][1]);
    return 1;
end



