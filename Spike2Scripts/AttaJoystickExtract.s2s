'$Id: AttaJoystickExtract.s2s,v 1.1 2010-10-07 22:44:19 devel Exp $
'
' AttaJoystickExtract
'
' Extracts joystick information from AttaJoy data files. 
' Early versions of the AttaJoy experiment do not place text marks in the data file indicating
' the boundary values used for the joystick regions. Hence for these data files the boundaries
' are hard-coded in this script. Once text marks are used to save these (and other) parameters
' the code here will reflect the changes.
'
' The joystick boundaries are used to find time periods where the joystick position is in each 
' of the regions between the boundaries. We use 4 boundaries, and so there are 5 regions 
' (numbered in the extracted data files 0, 1, 2, 3, 4). Starting at the lowest VOLTAGE boundary, 
' region 0 is all voltages below that value (or joystick position to the LEFT of that boundary). 
' Region 1 is the small region between the "Left High" boundary and
' the "Center Low" boundary. Region 2 is the center region (between "Center Low" and "Center High".
' Region 3 is the small region between "Center High" and "Right Low". Region 4 is all voltages 
' above "Right Low", or joystick to the far right. 
' 
' The regions used in the Rivalry expt are regions 0 (left), 2 (Center), and 4 (right). 
' 
' This script prompts the user for an input text file. This text file should contain filenames 
' (with full pathnames or pathnames relative to the location of the input text file). 
'
' Each input file is scanned and an output text file is written in the same folder as the input 
' data file, with the extension ".ajy". You must have write access to the directory where the 
' spike2 data file resides. 
'
' A word of caution: The search method used for finding border crossings can fail in some cases. 
' It will appear to fail at the end of a data file. I have not programmed a test to tell the diff-
' erence. Thus the Spike2 "Log" window will look something like this when processing a data file:
'
'
'ProcessListFile  Change current directory to C:\Documents and Settings\dan\Desktop\riv\
'ProcessListFile  File A_riv_012.smr, args "". Start processing...
'JoyX  Found joystick boundaries: 2.411, 2.429, 2.691, 2.716
'ERROR===============================================
'JoystickExtract CursorSearch failed. Check noise and delay params. Last good search was at t=628.177 max time is 631.92
'====================================================
'INFO CursorValid is 0
'ProcessListFile  File A_riv_012.smr, processing complete, status 0
'ProcessListFile  Done with listfile 
'ProcessListFile  Restore current directory to C:\Documents and Settings\dan\Desktop\riv\
'
' Note the line below the "ERROR". The time of the "last good search" is the time when the joystick voltage
' last crossed a boundary. The "max time" is the last time data was recorded in the file. In this case, the
' max time is less than 4 seconds from the last border crossing, and so its likely that the joystick was 
' not moved during that time. 
'
' If you see a large difference between the "last good search time" and the "max time", then you may have 
' an error in the search. There are some parameters used in the search relating to noise rejection that
' can be tweaked. I've tested the parameters in use with several Rivalry data files (as well as files
' from AttaJoy used with Farran's expt) and the searches all reach the end of the files successfully. 


#include "JoystickExtractFunctions.s2s"
#include "../../Spike2Util/BatchUtilities.s2s"

var boundaries[4];
var jchan%;


LogInit(1);
ProcessListFile%("", AttaJoystickX%);


func AttaJoystickX%(h%, args$)
    var params$;
    var stmp$;
    var version% := 0;
    var fparams[9];
    var tmark;
    var htxt%;
    var parfile$;
    var vtmp;
    
    
    ' Get first text mark and extract version
    tmark := NextTextMark(-1, params$); 
    if tmark < 0 then
        LogStatus("AttaJoystickX", "Text mark not found. Assuming version 0 file.");
        boundaries[0] := 2.37;
        boundaries[1] := 2.40753;
        boundaries[2] := 2.60;
        boundaries[3] := 2.61;
        jchan% := 13;
    else
        LogError("AttaJoystickX", "Version > 0 not handled.");
    endif
    
        
    ' Open output text file. 
    parfile$ := ReplaceFileExtension$(h%, "ajy");
    htxt% := FileOpen(parfile$, 8, 1);
        
    if JoystickExtractInit%(boundaries[], jchan%, htxt%, h%) = 0 then
        JoystickExtract%(-1, -1);
    endif
    View(htxt%);
    FileClose();
        
    
    return 0;
end

